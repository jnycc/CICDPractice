# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  #GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    GOOS=linux GOARCH=amd64 go build -o HelloGo-amd64 -v
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    go test ./...
  workingDirectory: '$(modulePath)'
  displayName: 'Test app'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'CICD-Practice-SSH'
    sourceFolder: '$(modulePath)/bin'
    contents: '**'
    targetFolder: '/home/ods-cicd-user/'
    readyTimeout: '20000'

- task: CmdLine@2
  inputs:
    script: 'sudo cp hello-go.service /etc/systemd/system/hello-go.service && sudo systemctl daemon-reload'

- task: CmdLine@2
  inputs:
    script: |
      sudo cp hello-go.service /etc/systemd/system/hello-go.service && sudo systemctl daemon-reload
      sudo service hello-go restart
      sudo iptables --flush -t nat && sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080 && sudo iptables-save
      curl --no-progress-meter $(curl --no-progress-meter https://api.ipify.org)/health-check
